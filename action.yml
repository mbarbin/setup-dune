name: Set up Dune
description: Install Dune (developer preview)
author: Samuel Hym
inputs:
  automagic:
    description: "Whether to run automatically all the standard lock, build, test steps"
    required: false
    default: "false"
  install-patch-on-macOS:
    description: "Whether to brew install gpatch on macOS (required to build some opam packages)"
    required: false
    default: "true"
outputs:
  dune-cache-hit:
    description: "A boolean value to indicate the Dune cache was found in the GHA cache"
    value: ${{ steps.dune-cache.outputs.cache-hit }}
runs:
  using: "composite"
  steps:
    - name: Install gpatch and add to PATH on macOS
      if: inputs.install-patch-on-macOS == 'true' && runner.os == 'macOS'
      shell: bash
      run: |
        set -e
        brew update
        brew install gpatch
        GPATCH_PREFIX="$(brew --prefix gpatch)"
        GPATCH_GNUBIN="$GPATCH_PREFIX/libexec/gnubin"
        if [ ! -d "$GPATCH_GNUBIN" ]; then
          echo "::error::gpatch gnubin directory not found!"
          exit 1
        fi
        DIR_CONTENTS="$(ls -l "$GPATCH_GNUBIN")"
        while IFS= read -r line; do
          echo "::debug::$line"
        done <<< "$DIR_CONTENTS"
        echo "$GPATCH_GNUBIN" >> $GITHUB_PATH
        patch --version
    - name: Install and setup dune
      shell: bash
      run: |
        curl -fsSL https://get.dune.build/install | sh
        echo "$HOME/.local/bin" >> "$GITHUB_PATH"
        echo "DUNE_CACHE_ROOT=$HOME/.cache/dune" >> "$GITHUB_ENV"
    - name: Cache duneâ€™s cache
      uses: actions/cache@v4
      id: dune-cache
      with:
        path: |
          ${{ env.DUNE_CACHE_ROOT }}
        key: dune-cache-${{ runner.os }}-${{ runner.arch }}
    - name: Resolve dependencies
      shell: bash
      run: |
        dune pkg lock
      if: inputs.automagic == 'true'
    - name: Build project
      shell: bash
      run: |
        dune build
      if: inputs.automagic == 'true'
    - name: Run tests
      shell: bash
      run: |
        dune runtest
      if: inputs.automagic == 'true'
