name: Set up Dune
description: Install Dune (developer preview)
author: Samuel Hym
inputs:
  automagic:
    description: "Whether to run automatically all the standard lock, build, test steps"
    required: false
    default: "false"
  install-depexts:
    description: "Whether to automatically install system dependencies (depexts) using `dune show depexts`."
    required: false
    default: "false"
outputs:
  dune-cache-hit:
    description: "A boolean value to indicate the Dune cache was found in the GHA cache"
    value: ${{ steps.dune-cache.outputs.cache-hit }}
  dune-cache-primary-key:
    description: "The primary key used for the Dune cache. Useful for advanced cache management."
    value: ${{ steps.dune-cache.outputs.cache-primary-key }}
  dune-cache-root:
    description: "The path to the Dune cache root directory. Useful for advanced cache management."
    value: ${{ steps.setup-dune.outputs.dune-cache-root }}
runs:
  using: "composite"
  steps:
    - name: Install and setup dune
      id: setup-dune
      shell: bash
      run: |
        curl -fsSL https://get.dune.build/install | sh
        echo "$HOME/.local/bin" >> "$GITHUB_PATH"
        echo "dune-cache-root=$HOME/.cache/dune" >> "$GITHUB_OUTPUT"
    - name: Restore dune cache
      id: dune-cache
      uses: actions/cache/restore@v4
      with:
        path: ${{ steps.setup-dune.outputs.dune-cache-root }}
        key: dune-cache-${{ runner.os }}-${{ runner.arch }}
    - name: Resolve dependencies
      shell: bash
      run: |
        dune pkg lock
      if: inputs.automagic == 'true'
    - name: Install depexts
      shell: bash
      run: |
        ${{ github.action_path }}/install-depexts.sh
      env:
        RUNNER_OS: ${{ runner.os }}
      if: inputs.install-depexts == 'true'
    - name: Build project
      shell: bash
      run: |
        dune build
      if: inputs.automagic == 'true'
    - name: Run tests
      shell: bash
      run: |
        dune runtest
      if: inputs.automagic == 'true'
    - name: Save dune cache
      if: inputs.automagic == 'true'
      uses: actions/cache/save@v4
      with:
        path: ${{ steps.setup-dune.outputs.dune-cache-root }}
        key: ${{ steps.dune-cache.outputs.cache-primary-key }}
