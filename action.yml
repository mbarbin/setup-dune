name: Set up Dune
description: Install Dune (developer preview)
author: Samuel Hym
inputs:
  automagic:
    description: 'Whether to run automatically all the standard lock, build, test steps'
    required: false
    default: 'false'
  directory:
    description: 'Directory in which dune should be run'
    required: false
    default: '.'
outputs:
  dune-cache-hit:
    description: 'A boolean value to indicate the Dune cache was found in the GHA cache'
    value: ${{ steps.dune-cache.outputs.cache-hit }}
runs:
  using: 'composite'
  steps:
    - name: Install and setup dune
      shell: bash
      run: |
        curl -fsSL https://get.dune.build/install | sh
        echo "$HOME/.local/bin" >> "$GITHUB_PATH"
        echo "DUNE_CACHE_ROOT=$HOME/.cache/dune" >> "$GITHUB_ENV"
    - name: Cache duneâ€™s cache
      uses: actions/cache@v4
      id: dune-cache
      with:
        path: |
          ${{ env.DUNE_CACHE_ROOT }}
        key: dune-cache-${{ runner.os }}-${{ runner.arch }}
    - name: Resolve dependencies
      shell: bash
      env:
        SETUPDUNEDIR: ${{ inputs.directory }}
      run: |
        cd "$SETUPDUNEDIR" && dune pkg lock
      if: inputs.automagic == 'true'
    - name: Install depexts
      shell: bash
      env:
        SETUPDUNEDIR: ${{ inputs.directory }}
        OS: ${{ runner.os }}
      run: |
        DEPEXTS="$(cd "$SETUPDUNEDIR" >/dev/null && dune show depexts 2>&1)"
        case "$OS,$DEPEXTS" in
          *,) # No depexts to install
            ;;
          Linux,*)
            set -x
            sudo apt-get update
            sudo apt-get install -y $DEPEXTS
            ;;
          macOS,*)
            set -x
            brew update
            brew install $DEPEXTS
            ;;
        esac
      if: inputs.automagic == 'true'
    - name: Build project
      shell: bash
      env:
        SETUPDUNEDIR: ${{ inputs.directory }}
      run: |
        cd "$SETUPDUNEDIR" && dune build
      if: inputs.automagic == 'true'
    - name: Run tests
      shell: bash
      env:
        SETUPDUNEDIR: ${{ inputs.directory }}
      run: |
        cd "$SETUPDUNEDIR" && dune runtest
      if: inputs.automagic == 'true'
